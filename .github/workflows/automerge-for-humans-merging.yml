# This workflow is centrally managed in https://github.com/asyncapi/.github/
# Don't make changes to this file in this repo as they will be overwritten with changes made to the same file in above mentioned repo

# Purpose of this workflow is to allow people to merge PR without a need of maintainer doing it. If all checks are in place (including maintainers approval) - JUST MERGE IT!

name: Automerge For Humans

on:
  pull_request_target:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked

jobs:
  automerge-for-humans:
    if: 
      github.event.pull_request.draft == false &&
      (github.event.pull_request.user.login != 'asyncapi-bot' &&
       github.event.pull_request.user.login != 'dependabot[bot]' &&
       github.event.pull_request.user.login != 'dependabot-preview[bot]')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install @octokit/core @octokit/plugin-paginate-rest @octokit/rest cross-fetch

      - name: Get List of authors
        id: authors
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require('@octokit/rest');
            const { paginateRest } = require('@octokit/plugin-paginate-rest');

            const fetch = require('cross-fetch');

            const token = process.env.GITHUB_TOKEN;
            const prNumber = process.env.PR_NUMBER;
            const repository = process.env.GITHUB_REPOSITORY;

            async function getCoAuthors() {
              try {
                const octokit = new Octokit({
                  auth: token,
                  request: {
                    fetch,
                  },
                });
                  
                const commitsResponse = await octokit.paginate("GET /repos/{owner}/{repo}/pulls/{pull_number}/commits", {
                  owner: repository.split('/')[0],
                  repo: repository.split('/')[1],
                  pull_number: ${{ github.event.number }},
                  per_page: 100,
                });
                  
                const authors = commitsResponse
                  .map(data => ({
                    name: data.commit.author.name,
                    email: data.commit.author.email,
                    login: data.commit.author.login,
                  }))
                  .filter(author => author.login !== 'PR_sender_login')
                  .reduce((uniqueAuthors, author) => {
                    if (!uniqueAuthors.some(a => a.email === author.email)) {
                      uniqueAuthors.push(author);
                    }
                    return uniqueAuthors;
                  }, [])
                  .map(author => `Co-authored-by: ${author.name} <${author.email}>`)
                  .join('\n');
                console.log(authors);
                return authors;
              } catch (error) {
                console.error('Error fetching commits:', error);
                return null;
              }
            }
          
            await getCoAuthors();

      - name: Automerge PR
        uses: pascalgn/automerge-action@22948e0bc22f0aa673800da838595a3e7347e584 #v0.15.6 https://github.com/pascalgn/automerge-action/releases/tag/v0.15.6
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          MERGE_LABELS: "!do-not-merge,ready-to-merge"
          MERGE_METHOD: "squash"
          # Using the output of the previous step (`Co-authored-by: ...` lines) as commit description.
          # Important to keep 2 empty lines as https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors#creating-co-authored-commits-on-the-command-line mentions
          MERGE_COMMIT_MESSAGE: "{pullRequest.title} (#{pullRequest.number})\n\n\n${{ steps.authors.outputs.value }}"
          MERGE_RETRIES: "20"
          MERGE_RETRY_SLEEP: "30000"
